# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="dracula"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git docker kubectl docker-compose golang)

# User configuration
if [[ -z $TMUX ]]; then
    export GOPATH=$HOME/go
    export PATH=$GOPATH/bin:$PATH
    export PATH=/usr/local/go/bin:$PATH
    export PATH=$HOME/.cargo/bin:$PATH
    export PATH=$HOME/.local/bin:$PATH
    export PATH=/Users/kaiyu/.local/venvs/pipenv/bin/pipenv:$PATH
    export DRACULA_DISPLAY_FULL_CWD=1
    export PYENV_ROOT="$HOME/.pyenv"
    [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
fi

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
source $ZSH/oh-my-zsh.sh

# autojump
[[ -s /home/chihkaiyu/.autojump/etc/profile.d/autojump.sh ]] && source /home/chihkaiyu/.autojump/etc/profile.d/autojump.sh
autoload -U compinit && compinit -u

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# alias ll="ls -al"
alias pes="pipenv shell"
alias vim="nvim"



# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/kaiyu/.local/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/kaiyu/.local/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/kaiyu/.local/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/kaiyu/.local/google-cloud-sdk/completion.zsh.inc'; fi

# function gcloud_project {
#   gcloud config set account {ACCOUNT}
#   gcloud config set project {PROJECT_ID}
#   gcloud config set compute/zone {ZONE}
#   gcloud beta container clusters get-credentials {} --region asia-east1 --project {PROJECT_ID}
# }

function unset_gcloud {
	gcloud config unset project
	gcloud config unset compute/zone
}

# function gcloud_ssh {
#     gcloud beta compute --project "{PROJECT_ID}" ssh --zone "{ZONE}" "{NAME}"
# }

function ghpr {
    gh pr create --base master --head chihkaiyu:$(git rev-parse --abbrev-ref HEAD) --web
}
